version: "3"

services:
  vote:
    build: ./vote
    command: python app.py
    links: 
      - redis
    #depends_on:
        #redis:
          #condition: service_healthy 
    volumes:
     - ./vote:/app
    ports:
      - "80:80"
    networks:
      - front-tier
      - back-tier

  result:
    build: ./result
    #command: nodemon --debug server.js
    links:
      - db
    #depends_on:
        #db:
          #condition: service_healthy 
    volumes:
      - ./result:/app
    ports:
      - "81:80"
      - "5858:5858"
    networks:
      - front-tier
      - back-tier

  worker:
    build:
      context: ./worker
      #links:
        #- redis
        #- db 
    #depends_on:
        #redis:
          #condition: service_healthy 
        #db:
          #condition: service_healthy 
    networks:
      - back-tier
  redis:
    image: redis
    container_name: redis
    #volumes:
        #- "./healthchecks:/healthchecks"
    #healthcheck:
          #test: /healthchecks/redis.sh
          #interval: "5s"
    ports: ["6379"]
    networks:
          - back-tier

  db:
    image: postgres:9.4
    container_name: db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST_AUTH_METHOD= trust
    #volumes:
      #- "db-data:/var/lib/postgresql/data"
      #- "./healthchecks:/healthchecks"
    networks:
      - back-tier

volumes:
  db-data:

networks:
  front-tier:
  back-tier:
